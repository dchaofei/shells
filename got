#!/bin/bash
# 快速创建 go 模板文件, 学习 go 的时候，每次创建 go 文件,加上 package 太麻烦
# go file_name //　创建 or 编辑
# go file_name r // 执行
template_dir=~/.create_template
template_file="$template_dir/template.go"
template_str="package main

import (
    \"fmt\"
)

func main() {

}
"
pre_command="
function GoRunCurrent()
        !go run "%"
endfunction
autocmd filetype go nmap <leader>. :call GoRunCurrent()<Enter>
"

if [ ! -d "$template_dir" ]; then
        mkdir "$template_dir"
fi

if [ ! -f "$template_file" ]; then
        echo "$template_str" > $template_file
fi

if [ ! "$1" ]; then
        echo "文件名参数不能为空"
        exit 0
fi

file_name=$1

# 截取后三位如果为空则加.go后缀，兼容文件名少于3个长度的
if [ -z ${file_name:(-3)} ]; then
	file_name=$file_name".go"
fi

# 如果后三位不含 .go 则加上 .go
if [ ! ${file_name:(-3)} = '.go' ]; then
        file_name=$file_name".go"
fi

# 如果文件已存在，并且 第二个参数为 r 则执行，否则打开
if [ -f "$file_name" ]; then
        if [ "r" = "$2" ]; then
                go run $file_name ${*:3}
                exit 0
        fi
fi

# vim $file_name -c "r $template_file"
vim $file_name --cmd "$pre_command"
